#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Build artifacts") {
            steps {
                echo "=========start build arctifacts========="
                sh 'mvn clean package'
            }
        }
        stage("Remove containers") {
            steps {
                sh 'docker ps -aq --filter "name=config-server" | xargs -r docker rm -f'
                sh 'docker ps -aq --filter "name=gateway" | xargs -r docker rm -f'
                sh 'docker ps -aq --filter "name=eureka" | xargs -r docker rm -f'
            }
        }
        stage("Build & run containers") {
            steps {
                dir('eureka') {
                    sh 'docker build --tag eureka:1-snapshot .'
                }
                sh "docker run -d --rm -p 8761:8761 --name eureka --network cloud eureka:${BUILD_NUMBER}-snapshot"
                dir('config-server') {
                    sh 'docker build --tag config-server:1-snapshot .'
                }
                sh 'docker run -d --rm -p 8888:8888 --name config-server --network cloud config-server:1-snapshot'
                sh 'sleep 10'
                dir('gateway') {
                    sh 'docker build --tag gateway:1-snapshot .'
                }
                sh 'docker run -d --rm -p 8082:8082 --name gateway --network cloud gateway:1-snapshot'
            }
        }
        stage("Clean docker images") {
            steps {
                sh 'docker rmi $(docker images -f dangling=true -q)'
            }
        }
    }
}