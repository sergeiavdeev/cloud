#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent { label 'deploy' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '3', artifactNumToKeepStr: '3'))
        timestamps()
    }
    stages {
        stage("Build artifacts") {
            steps {
                echo "=========start build arctifacts========="
                sh 'mvn clean package'
            }
        }
        stage("Remove containers") {
            steps {
                sh 'docker ps -aq --filter "name=config-server" | xargs -r docker rm -f'
                sh 'docker ps -aq --filter "name=gateway" | xargs -r docker rm -f'
                sh 'docker ps -aq --filter "name=eureka" | xargs -r docker rm -f'
            }
        }
        stage("Build & run containers") {
            steps {
                sh "TAG=${BUILD_NUMBER}-prd docker compose build"
                sh "TAG=${BUILD_NUMBER}-prd docker compose up -d"
                /*dir('eureka') {
                    sh "docker build --tag eureka:${BUILD_NUMBER}-tst ."
                }
                sh "docker run -d --rm -p 8761:8761 --name eureka --network cloud -e spring.profiles.active=tst eureka:${BUILD_NUMBER}-tst"
                dir('config-server') {
                    sh "docker build --tag config-server:${BUILD_NUMBER}-tst ."
                }
                sh "docker run -d --rm -p 8888:8888 --name config-server --network cloud -e spring.profiles.active=tst config-server:${BUILD_NUMBER}-tst"
                sh 'sleep 10'
                dir('gateway') {
                    sh "docker build --tag gateway:${BUILD_NUMBER}-tst ."
                }
                sh "docker run -d --rm -p 8082:8082 --name gateway --network cloud -e spring.profiles.active=tst gateway:${BUILD_NUMBER}-tst"
                */
            }

        }
        stage("Clean docker images") {
            steps {
                sh 'docker system prune -a -f'
            }
        }
    }
}